#!/usr/bin/env python

"""A quick and dirty extension to use walchoser from albert"""

"""Inspired by the github repo of official extensions : https://github.com/albertlauncher/external/ """

import os, subprocess
import sys
import json

albert_op = os.environ.get("ALBERT_OP")

items = []

if albert_op == "METADATA":
    metadata = {
        "iid": "org.albert.extension.external/v2.0",
        "name": "Walchoser",
        "version": "0.1",
        "author": "Emilien-P",
        "dependencies": [],
        "trigger": "wal "
    }
    print(json.dumps(metadata, indent=4))
    exit(0)

elif albert_op == "QUERY":
    albert_query = os.environ.get("ALBERT_QUERY")

    #change the command if needed on your machine
    def build_action(match_path):
        return {"command" : "wal", "name" : "Changing wp acording to tags given", "arguments" : ['-t', '-i', match_path]} #Keep -t option if using Termite or Xfce4-term

    def build_item(match, nb, icon_path, tags):
        item = {
            "id": nb,
            "name": " " + match,
            "description": "Matching with tags: " + "; ".join(tags["tags"]),
            "icon": icon_path,
            "actions": [build_action(icon_path)] #icon = wallpaper
        }
        return item

    tags = [tag for tag in albert_query.split(' ')[1:] if tag] #remove empty tag generated by split

    #Change the path to the exec as it is in your machine
    exec_path = '/home/emilien/scripts-dump/walchoser.py'

    matching = subprocess.check_output([exec_path, '-p', '-q'] + tags)

    wall_path = subprocess.check_output([exec_path, '--get-wp']).replace("\n", "")

    end = len(matching) - 2

    if matching:
        matching = matching[1:end].strip().replace("\n", "").replace(" ", "").replace("\"", "").split(',')

    nb = 1

    #build the match items array
    for match in matching:
        get_tags = json.loads('{"tags": ' + subprocess.check_output([exec_path, '-t', match]).replace("\n", "") + "}")
        items.append(json.dumps(build_item(match, nb, wall_path + '/' + match, get_tags)))
        nb = nb + 1

    if len(items) > 0:
        print('{"items": [' + ','.join(items) + "]}")
    else:
        print('{"items": []}')

    sys.exit(0)

elif albert_op in ["INITIALIZE", "FINALIZE", "SETUPSESSION", "TEARDOWNSESSION"]:
    sys.exit(0)